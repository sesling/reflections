What happens when you initialize a repository? Why do you need to do it? 
Initializing a repository adds a hidden .git folder to store new commits and other metadata.

You need to do this because, unless you're cloning a previous repository, you have no way of storing previous commits, and your work won't be recognized as a git repository. 

How is the staging area different from the working directory and the repository? What value do you think it offers? 

The staging area is an intermediate area between the working directory and the repository. It allows you to pick and choose which files you'd like to commit, rather than having to commit them all at once. 

How can you use the staging area to make sure you have one commit per logical change? 

It allows you to double check what changes you've made compared to older commits; if you've made too many or too few changes than what would logically be expected, it will let you know. 

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

Branches are helpful if one wants to try out two or more builds of a file that have slight differences between them.
This makes it easier to compare and contrast different versions of a file
without having to worry about commit ids.

How do the diagrams help you visualize the branch structure?

For starters, it helps comprehend why "branches" are called that.
It also helps make sense on where certain commits are "stored" in a repository, and why some might be easier or harder to access than others. 
